一、什么是工作流
​ 工作流(Workflow)，就是“业务过程的部分或整体在计算机应用环境下的自动化”，它主要解决的是“使在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促使此目标的实现”。

​ 工作流管理系统(Workflow Management System,WfMS)是一个软件系统，它完成工作量的定义和管理，并按照在系统中预先定义好的工作流逻辑进行工作流实例的执行。工作流管理系统不是企业的业务系统，而是为企业的业务系统的运行提供了一个软件的支撑环境。


二、 常见的工作流框架
流行的工作流框架有：Activity5.13、JBPM4.4、OSWorkFlow、WorkFlow

工作流框架底层需要有数据库提供支持，activiti5.13版本，有23张表。

JBPM4.4框架底层有数据库支持，18张表。

JBPM底层使用hibernate操作数据库。

Activiti框架底层使用的mybatis操作数据库。


三、 Activiti5介绍
Activiti5是由Alfresco软件在2010年5月17日发布的业务流程管理（BPM）框架，它是覆盖了业务流程管理、工作流、服务协作等领域的一个开源的、灵活的、易扩展的可执行流程语言框架。Activiti基于Apache许可的开源BPM平台，创始人Tom Baeyens是JBoss jBPM的项目架构师，它特色是提供了eclipse插件，开发人员可以通过插件直接绘画出业务流程图。

img


四、 安装activiti流程设计器插件

4.1 在线安装
打开Eclipse -> Help -> Install New SoftWare-> Add

然后按照如下对话框输入：

img

输入网址：http://www.activiti.org/designer/update/


4.12 离线安装
下载地址：http://www.activiti.org/designer/archived/activiti-designer-5.14.1.zip

第一步：获得下载activiti-eclipse插件的安装包

第二步：解压安装包，复制解压文件里面的features和plugins到eclipse中的对应目录中

第三步：重启eclipse。


五、 初始化activiti框架数据表

5.1 下载activiti框架
Activiti框架下载地址：http://activiti.org/


5.2创建一个数据库
img


5.3使用activiti框架的自动建表功能
搭建开发环境：

第一步：创建一个Java项目activiti

第二步：导入jar包，还需要导入MySQL驱动包


1、不使用配置文件（不建议）
package net.csdn.activiti;
 
import org.activiti.engine.ProcessEngine;
importorg.activiti.engine.ProcessEngineConfiguration;
import org.junit.Test;
 
public class HelloActiviti {
   @Test
	public void test1() {
		// 创建一个流程引擎配置对象
		ProcessEngineConfiguration configuration = ProcessEngineConfiguration
				.createStandaloneProcessEngineConfiguration();
		// 配置数据源
		configuration.setJdbcDriver("com.mysql.jdbc.Driver");
		configuration
				.setJdbcUrl("jdbc:mysql://192.168.10.129:3306/activity?useUnicode=true&characterEncoding=UTF-8");
		configuration.setJdbcUsername("yundai365");
		configuration.setJdbcPassword("yundai365@#");
		// 设置自动建表
		configuration.setDatabaseSchemaUpdate("true");
		// 创建一个流程引擎对象，在创建流程引擎对象过程中会自动创建表
		ProcessEngine processEngine = configuration.buildProcessEngine();
	}
}

2、使用配置文件activiti-context.xml
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 配置流程引擎配置对象 -->
	<bean id="processEngineConfiguration"
		class="org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration">
		<property name="jdbcDriver" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://192.168.10.129:3306/activiti_1" />
		<property name="jdbcUsername" value="yundai365" />
		<property name="jdbcPassword" value="yundai365@#" />
		<property name="databaseSchemaUpdate" value="true" />
	</bean>
</beans>
	/**
	 * 使用框架提供的自动建表（提供配置文件）---配置文件activiti-context.xml可以从框架提供的例子程序中获取
	 */
	@Test
	public void test2() {
		String resource = "activiti-context.xml";// 配置文件名称
		String beanName = "processEngineConfiguration";// 配置id值
		ProcessEngineConfiguration conf = ProcessEngineConfiguration
				.createProcessEngineConfigurationFromResource(resource,
						beanName);
		ProcessEngine processEngine = conf.buildProcessEngine();
	}

六、了解23张表
Activiti的后台是有数据库的支持，所有的表都以ACT_开头。 第二部分是表示表的用途的两个字母标识。用途也和服务的API对应。

1) ACT_RE_*: 'RE'表示repository。 这个前缀的表包含了流程定义和流程静态资源（图片，规则，等等）。

2) ACT_RU_*: 'RU'表示runtime。 这些运行时的表，包含流程实例，任务，变量，异步任务，等运行中的数据。 Activiti只在流程实例执行过程中保存这些数据，在流程结束时就会删除这些记录。 这样运行时表可以一直很小速度很快。

3) ACT_ID_*: 'ID'表示identity。 这些表包含身份信息，比如用户，组等等。

4) ACT_HI_*: 'HI'表示history。 这些表包含历史数据，比如历史流程实例，变量，任务等等。

5) ACT_GE_*: 通用数据， 用于不同场景下。


资源库流程规则表
　　1) act_re_deployment 部署信息表

　　2) act_re_model 流程设计模型部署表

　　3) act_re_procdef 流程定义数据表


运行时数据库表
　　1) act_ru_execution 运行时流程执行实例表

　　2) act_ru_identitylink 运行时流程人员表，主要存储任务节点与参与者的相关信息

　　3) act_ru_task 运行时任务节点表

　　4) act_ru_variable 运行时流程变量数据表


历史数据库表
　　1) act_hi_actinst 历史节点表

　　2) act_hi_attachment 历史附件表

　　3) act_hi_comment 历史意见表

　　4) act_hi_identitylink 历史流程人员表

　　5) act_hi_detail 历史详情表，提供历史变量的查询

　　6) act_hi_procinst 历史流程实例表

　　7) act_hi_taskinst 历史任务实例表

　　8) act_hi_varinst 历史变量表


组织机构表
　　1) act_id_group 用户组信息表

　　2) act_id_info 用户扩展信息表

　　3) act_id_membership 用户与用户组对应信息表

　　4) act_id_user 用户信息表

　　这四张表很常见，基本的组织机构管理，关于用户认证方面建议还是自己开发一套，组件自带的功能太简单，使用中有很多需求难以满足


通用数据表
　　1) act_ge_bytearray 二进制数据表

　　2) act_ge_property 属性数据表存储整个流程引擎级别的数据,初始化表结构时，会默认插入三条记录